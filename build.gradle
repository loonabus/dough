buildscript {
	ext {
		bootVer = '3.3.1'
		packagePrefix = 'org.springframework.boot:spring-boot'
	}
}

plugins {
	id 'java'
	id 'idea'
	id 'org.springframework.boot' version "${bootVer}"
	id 'org.jooq.jooq-codegen-gradle' version '3.19.10'
}

repositories {
	mavenCentral(); gradlePluginPortal()
}

group = 'io.dough'
version = '0.0.1'
description = 'Spring Boot 3.x Template'

java.sourceCompatibility = 21
java.targetCompatibility = 21

configurations.configureEach { c ->
	c.exclude([group: 'log4j'])
	c.exclude([group: 'commons-logging'])
	c.resolutionStrategy { rs -> rs.preferProjectModules() }
}

dependencies {
	implementation platform("${packagePrefix}-dependencies:${bootVer}")
	implementation platform('org.springframework.cloud:spring-cloud-dependencies:2023.0.2')

	implementation "${packagePrefix}-starter-actuator"
	implementation "${packagePrefix}-starter-aop"
	implementation "${packagePrefix}-starter-cache"
	implementation "${packagePrefix}-starter-data-redis"
	implementation "${packagePrefix}-starter-jooq"
	implementation "${packagePrefix}-starter-security"
	implementation "${packagePrefix}-starter-validation"
	implementation "${packagePrefix}-starter-web"

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

	implementation 'org.jsoup:jsoup:1.17.2'
	implementation 'org.codehaus.janino:janino:3.1.12'
	implementation 'org.owasp:security-logging-logback:1.1.7'
	implementation 'com.navercorp.lucy:lucy-xss-servlet:2.0.1'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.apache.commons:commons-text:1.12.0'
	implementation 'org.apache.commons:commons-pool2:2.12.0'
	implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'

	implementation 'com.h2database:h2:2.2.224'
	implementation 'org.postgresql:postgresql:42.7.3'
	implementation 'com.github.codemonstur:embedded-redis:1.4.3'

	testImplementation "${packagePrefix}-starter-test"

	testImplementation 'com.github.fppt:jedis-mock:1.1.1'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'

	compileOnly 'org.projectlombok:lombok:1.18.32'
	compileOnly 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	annotationProcessor 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	annotationProcessor "${packagePrefix}-configuration-processor:${bootVer}"

	testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	jooqCodegen 'org.jooq:jooq-codegen:3.19.10'
	jooqCodegen 'org.jooq:jooq-meta-extensions:3.19.10'
}

jooq {
	configuration {
		generator {
			database {
				name = 'org.jooq.meta.extensions.ddl.DDLDatabase'
				properties {
					property {
						key = 'sort'; value = 'semantic'
					}
					property {
						key = 'defaultNameCase'; value = 'lower'
					}
					property {
						key = 'scripts'; value = 'src/main/resources/db/schema.sql'
					}
				}
			}
		}
	}
}

compileJava {
	dependsOn(jooqCodegen)
	inputs.files(processResources)
	options.compilerArgs.add('-parameters')
	options.compilerArgs.add('-Amapstruct.defaultComponentModel=spring')
	options.compilerArgs.add('-Amapstruct.suppressGeneratorTimestamp=true')
}

project.getTasks().register('cpExtraFiles', Copy) { c ->
	c.from("${projectDir}/exec"); c.into(layout.buildDirectory.dir("libs"))
}

jar { enabled = false }

bootJar {
	dependsOn(cpExtraFiles)
	archiveFileName = "${rootProject.name}.jar"
}

wrapper { gradleVersion = '8.5' }

test { useJUnitPlatform(); maxParallelForks(3) }
